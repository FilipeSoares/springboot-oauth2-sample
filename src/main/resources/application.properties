# LOGGING
logging.file=oauth2.app.log
logging.level.org.springframework=DEBUG 

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# Datasource
spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# Server HTTP port.
server.port=8080

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
security.oauth2.resource.filter-order=3
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.jwk.key-set-uri= # The URI for getting the set of keys that can be used to validate the token.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# CUSTOM PROPERTIES 
security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=_REALM

# SmartFinancerClientID (MD5)
security.jwt.client-id=BFBE45C41E29EFB5FF27988644FAEA5F
# SmartFinancerClientSecret (SHA256) 
security.jwt.client-secret=F0E4A978866280C0E7D911AC2490EDDB12E2D4399A11833A326C7C2D553DC51B
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=resource_id
security.jwt.accessTokenValiditySeconds=3600
security.jwt.authorities=ROLE_TRUSTED_CLIENT

# JACKSON (JacksonProperties)
spring.jackson.serialization.fail-on-empty-beans=false
